#coding=utf-8
from django.contrib.auth.decorators import login_required
from django.shortcuts import render, render_to_response, RequestContext
from django.http import HttpResponseRedirect
from django.http import HttpResponse
from usermanage.models import User
from django.template import loader, Context
from forms import UserForm
from django.views.decorators.csrf import csrf_exempt
from django.core.urlresolvers import reverse
from log.views import addlog

def md5(str):
	import hashlib
	import types
	if type(str) is types.StringType:
	    	m = hashlib.md5()  
	    	m.update(str)
	    	return m.hexdigest()
	else:
    		return ''

def register(request):
    	if request.method == "POST":
	    	uf = UserForm(request.POST)
	    	if uf.is_valid():
	    		userip = request.POST.get('userip')
	    		username = request.POST.get('username')
	    		password = request.POST.get('password')
	        	userauth = request.POST.get('userauth')
	        	user = User()
	        	user.userip = userip
	        	user.username = username
	        	user.password = password
	        	user.userauth = userauth
	        	user.save()
	        	return HttpResponseRedirect(reverse('login'))
	        	# return HttpResponseRedirect('/user/login/')
    	else:
        	uf = UserForm()
    	return render_to_response('register.html',{'uf':uf})
# @login_required
def user(request):
		username = request.session.get('username','')
		if username:
			user_all = User.objects.all()
			template = loader.get_template("usermanage.html")
			context = Context({'user_all':user_all,'username':username})
			return HttpResponse(template.render(context))
		else:
			return HttpResponseRedirect(reverse('login'))
			# return HttpResponseRedirect('/user/login/')

@csrf_exempt
def login(request):
    	if request.method == 'POST':
	    	uf = UserForm(request.POST)
	    	if uf.is_valid():
	    		userip = request.POST.get('userip')
	    		username = request.POST.get('username')
	    		# password = md5(str(request.POST.get('password')))
	    		password = request.POST.get('password')
	    		userauth = request.POST.get('userauth')

		    	user = User.objects.filter(userip__exact = userip,username__exact = username,password__exact = password,userauth__exact = userauth)
		    	print user
		    	print userauth
		    	if (user and (userauth==u'0')):
		    		request.session['username'] = username
		    		request.session.set_expiry(0)
		    		# addlog(userip,'用户登录')
                		return HttpResponseRedirect(reverse('usermanage'))
             	elif (user and (userauth==u'1')):
             	 	return HttpResponseRedirect(reverse('usermanage'))
             	else:
             		return HttpResponseRedirect(reverse('login'))
    	else:
    		uf = UserForm()
    	return render_to_response('login.html',{'uf':uf})

def logout(request):
    	del request.session['username']
    	return HttpResponseRedirect(reverse('login'))
    	# return HttpResponseRedirect('/user/login/')

def userupdate(request):
	usernamelogin = request.session.get('username','')
    	ip = request.GET['userip']
  	return render_to_response('update.html',{'userip':ip,'username':usernamelogin})


def update(request):
	userip = request.POST['userip']
	if request.method == 'POST':
	    	uf = UserForm(request.POST)
	    	print uf.is_valid()
	    	if uf.is_valid():
			name = request.POST['username']
			pwd = request.POST['password']
			auth = request.POST['userauth']
			user = User.objects.get(userip=userip)
			if user:
				user.username = name
				user.password = pwd
				user.userauth = auth
				user.save()
				return HttpResponseRedirect(reverse('usermanage'))
			else:
				return HttpResponseRedirect(reverse('update'))
	else:
        	# uf = UserForm()bug
        	return HttpResponseRedirect(reverse('usermanage'))
    	return render_to_response('update.html',{'uf':uf})

def useradd(request):
	username = request.session.get('username','')
  	return render_to_response('useradd.html',{'username':username})

def add(request):
	if request.method == "POST":
	    	uf = UserForm(request.POST)
	    	if uf.is_valid():
			userip = request.POST['userip']
			name = request.POST['username']
			pwd = request.POST['password']
			auth = request.POST['userauth']
			user = User()
			user.userip = userip
			user.username = name
			user.password = pwd
			user.userauth = auth
			user.save()
			return HttpResponseRedirect(reverse('usermanage'))
	else:
        	uf = UserForm()
    	return render_to_response('useradd.html',{'uf':uf})


def delete(request):
	ip = request.GET['userip']
	user = User.objects.get(userip=ip)
	user.delete()
	return HttpResponseRedirect(reverse('usermanage'))
	# return HttpResponseRedirect("/user/usermanage/")
